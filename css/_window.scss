@mixin windowGradient($gradientDirection) {
    background-image: linear-gradient(to $gradientDirection, $windowLite, $windowDark);
}

.window {
    $windowEdgeWidth: 5px;
    min-height: 250px;
    // margin: 25px;
    border: 1px solid $windowBorder;
    display: inline-grid;
    grid-template-columns: $windowEdgeWidth 1fr $windowEdgeWidth;
    grid-template-rows: $windowEdgeWidth 1fr $windowEdgeWidth;
    .windowTop {
        grid-column: 1 / -1;
        grid-row: 1;
        @include windowGradient(bottom);
        clip-path: polygon(0px 0px, 100% 0px, calc(100% - #{$windowEdgeWidth}) $windowEdgeWidth, $windowEdgeWidth $windowEdgeWidth);
    }
    .windowRight {
        grid-column: 3;
        grid-row: 1 / -1;
        @include windowGradient(left);
        clip-path: polygon(0 $windowEdgeWidth, $windowEdgeWidth 0, $windowEdgeWidth 100%, 0px calc(100% - #{$windowEdgeWidth}));
    }
    .windowBottom {
        grid-column: 1 / -1;
        grid-row: 3;
        @include windowGradient(bottom);
        clip-path: polygon($windowEdgeWidth 0px, calc(100% - #{$windowEdgeWidth}) 0px, 100% $windowEdgeWidth, 0px $windowEdgeWidth);
    }
    .windowLeft {
        grid-column: 1;
        grid-row: 1 / -1;
        @include windowGradient(right);
        clip-path: polygon(0 0, $windowEdgeWidth $windowEdgeWidth, $windowEdgeWidth calc(100% - #{$windowEdgeWidth}), 0px 100%);
    }

    .windowMain {
        grid-column: 2;
        grid-row: 2; 
        border: 1px solid $windowBorder;
        display: grid;
        grid-template-columns: 25px 1fr 25px 25px;
        grid-template-rows: 25px 1fr;
        .drag, .title, .min, .max {
            border-width: 2px;
            border-style: solid;
            border-color: $windowLite $windowMed $windowDark $windowLite;
            background-color: $window;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 4px;
            span {
                display: inline-block;
            }
        }
        .drag, .min, .max {
            span {
                border: 1px solid black;
                box-shadow: 1px 1px 0 black;
            }
        }
        .drag {
            grid-column: 1;
            grid-row: 1;
            span {
                width: 100%;
                height: 3px;
            }
        }
        .title {
            grid-column: 2;
            grid-row: 1;
            display: flex;
            justify-content: flex-start;
            font-style: italic;
        }
        .min {
            grid-column: 3;
            grid-row: 1;
            span {
                width: 3px;
                height: 3px;
            }
        }
        .max {
            grid-column: 4;
            grid-row: 1;
            span {
                width: 100%;
                height: 100%;
            }
        }
        .content {
            grid-column: 1 / -1;
            grid-row: 2;
    
            // max-height: 400px;
            padding: 5px;
            overflow-y: scroll;
            color: white;
            position: relative;
        }
    }

    &.chess, &.console {
        .windowMain .content {
            font-family: 'IBM Plex Mono', monospace;
            font-weight: 300;
            line-height: 1.1;
            p {
                margin: 0;
            }
        }
    }
    &.chess {
        background-color: black;
        width: calc(100% - 50px);
        box-sizing: border-box;
        .title::before {
            content: "Chess";
        }
        td {min-width: 55px;}
    }
    &.os {
        background-color: $os;
        .title::before {
            content: "gr_osview";
        }
        .windowMain .content {
            max-height: none;
            color: $black;
            overflow: hidden;
        }
    }
    &.console {
        background-color: $console;
        width: calc(100% - 50px);
        box-sizing: border-box;
        .title::before {
            content: "Central Park Control Console";
        }
    }
    &.display {
        width: auto;
        height: auto;
        min-height: auto;
        .title::before {
            content: "zebraGirl.jpg";
        }
        .windowMain .content {
            display: flex;
            padding: 0;
            max-height: none;
            overflow: hidden;
        }
        img {
            width: 100%;
            height: 100%;
        }
    }

    dl, dt, dd {
        padding: 0;
        margin: 0;
        list-style: none;
    }
    dl {
        font-weight: 800;
        font-style: italic;
        font-family: 'Times New Roman', Times, serif;
        .os-output {
            font-size: 80%;
            margin-left: auto;
            padding: 2px 2px 2px 10px;
        }
        .output {
            display: block;
            font-size: 80%;
            // font-weight: 300;
            margin-left: auto;
            background-color: $black;
            color: white;
            padding: 2px 2px 2px 10px;
        }
        .output.error {
            color: $progressRed;
        }
        .output.active {
            color: $progressBlue;
            background-color: white;
        }
    }
    dt {
        
        margin-bottom: 5px;
        display: flex;
        span {
            margin-left: 5px;
        }
    }
    dd {
        display: flex;
        min-width: 500px;
        &:not(:last-child){
            margin-bottom: 10px;
        }
        & > span {
            margin-left: 10px;
        }
    }
    .progress-red {
        background-color: $progressRed;
    }
    .progress-green {
        background-color: $progressGreen;
    }
    .progress-blue {
        background-color: $progressBlue;
    }
    .progress-ltblue {
        background-color: $progressLtBlue;
    }
    .os-red {
        color: $progressRed;
    }
    .os-green {
        color: $progressGreen;
    }
    .os-blue {
        color: $progressBlue;
    }
    .os-ltblue {
        color: $progressLtBlue;
    }
    .os-magenta {
        color: $osMagenta;
    }
    .os-yellow {
        color: $osYellow;
    }
    .progress-null {
        background-color: $progressNull;
    }
    .progress {
        flex: 1;
        height: 29px;
        position: relative;
        border: 1px solid $black;
        span {
            height: 100%;
            position: absolute;
            left: 0;
        }
    }
    [class^='progress-'] {
        transition: width 1000ms ease-out;
    }

    &.display, &.os, &.chess, &.console {
        position: absolute;
    }
    &.console {
        // max-width: 65vw;
        min-height: 40vh;
        left: 30vw;
        top: 10vh;
        z-index: 4;
    }
    &.os {
        // max-width: 550px;
        top: 20vh;
        left: 8vw;
        z-index: 3;
    }
    &.chess {
        // max-width: 80vw;
        left: 1vw;
        bottom: 1vh;
        z-index: 2;
    }
    &.display {
        // max-width: 400px;
        right: 8vw;
        bottom: 3vh;
        z-index: 1;
    }
}
body .window.os,
body .window.console {
    display: none !important;
}
body.osOn .window.os,
body.consoleOn .window.console {display: inline-grid !important;}

